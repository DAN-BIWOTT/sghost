 <div id="wrap">
<%= render 'h_partials/header' %>
<%= render 'h_partials/mobile' %>

	<!--Start Banner-->
  <canvas id="nokey" width="800" height="800">
      Your Browser Don't Support Canvas, Please Download Chrome ^_^``

   <div class="tp-banner-container">
		<div class="tp-banner" >

	<div class="tp-bannertimer"></div>
	</div>
	<div class="wave"></div>
</div>
  </canvas>
  <div class="wave"></div>
   <!--End Banner-->



   <!--Start Content-->
   <div class="content">



		<!--Start Services-->
		<div class="services">
			<div class="container">

				<div class="row">
				<div class="col-md-12">
					<div class="main-title">
					<span>Introduction</span>
					<h1>My Services & Interests</h1>
					<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ac tortor at tellus feugiat congue quis ut nunc. Semper ac dolor vitae accumsan. interdum hendrerit lacinia.</p>
					</div>
				</div>
				</div>

				<div class="row">

					<div class="col-md-4">
						<div class="serv-main-sec">
						<div class="service-sec-top-bg"></div>
						<div class="service-sec">
							<%= image_tag('man'); %>
							<h6>Web Systems</h6>
							<p>PHP, Ruby on Rails and everything in between, React JS, single Spa framework</p>
							<a href="#">Know More</a>
						</div>
						<div class="service-sec-bottom-bg"></div>
						</div>
					</div>

					<div class="col-md-4">
						<div class="serv-main-sec serv-main-sec2">
						<div class="service-sec-top-bg"></div>
						<div class="service-sec">
							<%= image_tag('technics-computer-technology-internet-wallpaper-preview') %>
							<h6>Mobile Systems</h6>
							<p>Java, Kotlin, dart and ofcourse Flutter.</p>
							<a href="#">Know More</a>
						</div>
						<div class="service-sec-bottom-bg"></div>
						</div>
					</div>

					<div class="col-md-4">
						<div class="serv-main-sec">
						<div class="service-sec-top-bg"></div>
						<div class="service-sec">
						<%= image_tag('robotics'); %>
							<h6>Robotics</h6>
							<p>in this theme we are included many more restaurant font icons.</p>
							<a href="menu.html">Know More</a>
						</div>
						<div class="service-sec-bottom-bg"></div>
						</div>
					</div>

          <div class="col-md-4">
						<div class="serv-main-sec">
						<div class="service-sec-top-bg"></div>
						<div class="service-sec">
							<%= image_tag('1_aSC3odScNMyz7Y6MZvqJ1Q'); %>
							<h6>Artificial Intelligence</h6>
							<p>in this theme we are included many more restaurant font icons.</p>
							<a href="menu.html">Know More</a>
						</div>
						<div class="service-sec-bottom-bg"></div>
						</div>
					</div>

          <div class="col-md-4">
						<div class="serv-main-sec">
						<div class="service-sec-top-bg"></div>
						<div class="service-sec">
								<%= image_tag('ai_robotics_analytics_data-scientist_mathematics_equation-100777424-large'); %>
							<h6>Machine Learning</h6>
							<p>in this theme we are included many more restaurant font icons.</p>
							<a href="menu.html">Know More</a>
						</div>
						<div class="service-sec-bottom-bg"></div>
						</div>
					</div>

          <div class="col-md-4">
						<div class="serv-main-sec">
						<div class="service-sec-top-bg"></div>
						<div class="service-sec">
							<%= image_tag('Blockchain-1-770x410'); %>
							<h6>Block Chain Technology</h6>
							<p>in this theme we are included many more restaurant font icons.</p>
							<a href="menu.html">Know More</a>
						</div>
						<div class="service-sec-bottom-bg"></div>
						</div>
					</div>

				</div>

			</div>
		</div>
		<!--End Services-->




		<!--Start Master of Town-->
		<div class="master-town">

				<div class="parallax">
					<div class="detail">
            <h1 id="code">
              <span
                 class="txt-rotate"
                 data-period="2000"
                 data-rotate='[ "Convert Templates to fit your rails needs.", "Correct common errors faced during developement of Rails applications.", "Block Chain tutorials.", "Flutter tutorials.", "fun!" ]'>

                 </span>
</h1>
						<a href="#" class="white-btn">Start tutorials...</a>
					</div>
				</div>

		</div>
		<!--End Master of Town-->




		<!--Start Our Story-->
			<div class="our-story">
				<div class="container">
					<div class="row">

						<div class="col-md-6">
							<div class="story-detail">
							<div class="main-title">
								<span>From Blog</span>
								<h2>The brain's subtle art of deception.</h2>
							</div>
							<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ac tortor at tellus feugiat congue quis ut nunc. Semper ac dolor vitae accumsan. interdum hendrerit lacinia.</p>
                <%= link_to('view more stories',public_blogs_path,class: :"full-story") %>
							</div>
						</div>

						<div class="col-md-6">
							<%= image_tag('our-story.jpg') %>
						</div>

					</div>
				</div>
			</div>
		<!--End Our Story-->
	 </div>
   <!--End Content-->



<%= render 'h_partials/footer' %>
<a href="#0" class="cd-top"></a>
  </div>
<!-- Revolution Slider -->
<script type="text/javascript">
jQuery('.tp-banner').show().revolution(
{
dottedOverlay:"none",
delay:16000,
startwidth:1170,
startheight:900,
hideThumbs:200,

thumbWidth:100,
thumbHeight:50,
thumbAmount:5,

navigationType:"nexttobullets",
navigationArrows:"solo",
navigationStyle:"preview",

touchenabled:"on",
onHoverStop:"on",

swipe_velocity: 0.7,
swipe_min_touches: 1,
swipe_max_touches: 1,
drag_block_vertical: false,

parallax:"mouse",
parallaxBgFreeze:"on",
parallaxLevels:[7,4,3,2,5,4,3,2,1,0],

keyboardNavigation:"off",

navigationHAlign:"center",
navigationVAlign:"bottom",
navigationHOffset:0,
navigationVOffset:20,

soloArrowLeftHalign:"left",
soloArrowLeftValign:"center",
soloArrowLeftHOffset:20,
soloArrowLeftVOffset:0,

soloArrowRightHalign:"right",
soloArrowRightValign:"center",
soloArrowRightHOffset:20,
soloArrowRightVOffset:0,

shadow:0,
fullWidth:"on",
fullScreen:"off",

spinner:"spinner4",

stopLoop:"off",
stopAfterLoops:-1,
stopAtSlide:-1,

shuffle:"off",

autoHeight:"off",
forceFullWidth:"off",



hideThumbsOnMobile:"off",
hideNavDelayOnMobile:1500,
hideBulletsOnMobile:"off",
hideArrowsOnMobile:"off",
hideThumbsUnderResolution:0,

hideSliderAtLimit:0,
hideCaptionAtLimit:0,
hideAllCaptionAtLilmit:0,
startWithSlide:0,
videoJsPath:"rs-plugin/videojs/",
fullScreenOffsetContainer: ""
});
</script>

<script type="text/javascript">
  var canvas = document.getElementById('nokey'),
   can_w = parseInt(canvas.getAttribute('width')),
   can_h = parseInt(canvas.getAttribute('height')),
   ctx = canvas.getContext('2d');

// console.log(typeof can_w);

var ball = {
      x: 0,
      y: 0,
      vx: 0,
      vy: 0,
      r: 0,
      alpha: 1,
      phase: 0
   },
   ball_color = {
       r: 207,
       g: 255,
       b: 4
   },
   R = 2,
   balls = [],
   alpha_f = 0.03,
   alpha_phase = 0,

// Line
   link_line_width = 0.8,
   dis_limit = 400,
   add_mouse_point = true,
   mouse_in = false,
   mouse_ball = {
      x: 0,
      y: 0,
      vx: 0,
      vy: 0,
      r: 0,
      type: 'mouse'
   };

// Random speed
function getRandomSpeed(pos){
    var  min = -1,
       max = 2;
    switch(pos){
        case 'top':
            return [randomNumFrom(min, max), randomNumFrom(0.1, max)];
            break;
        case 'right':
            return [randomNumFrom(min, -0.1), randomNumFrom(min, max)];
            break;
        case 'bottom':
            return [randomNumFrom(min, max), randomNumFrom(min, -0.1)];
            break;
        case 'left':
            return [randomNumFrom(0.1, max), randomNumFrom(min, max)];
            break;
        default:
            return;
            break;
    }
}
function randomArrayItem(arr){
    return arr[Math.floor(Math.random() * arr.length)];
}
function randomNumFrom(min, max){
    return Math.random()*(max - min) + min;
}
console.log(randomNumFrom(0, 10));
// Random Ball
function getRandomBall(){
    var pos = randomArrayItem(['top', 'right', 'bottom', 'left']);
    switch(pos){
        case 'top':
            return {
                x: randomSidePos(can_w),
                y: -R,
                vx: getRandomSpeed('top')[0],
                vy: getRandomSpeed('top')[1],
                r: R,
                alpha: 1,
                phase: randomNumFrom(0, 10)
            }
            break;
        case 'right':
            return {
                x: can_w + R,
                y: randomSidePos(can_h),
                vx: getRandomSpeed('right')[0],
                vy: getRandomSpeed('right')[1],
                r: R,
                alpha: 1,
                phase: randomNumFrom(0, 10)
            }
            break;
        case 'bottom':
            return {
                x: randomSidePos(can_w),
                y: can_h + R,
                vx: getRandomSpeed('bottom')[0],
                vy: getRandomSpeed('bottom')[1],
                r: R,
                alpha: 1,
                phase: randomNumFrom(0, 10)
            }
            break;
        case 'left':
            return {
                x: -R,
                y: randomSidePos(can_h),
                vx: getRandomSpeed('left')[0],
                vy: getRandomSpeed('left')[1],
                r: R,
                alpha: 1,
                phase: randomNumFrom(0, 10)
            }
            break;
    }
}
function randomSidePos(length){
    return Math.ceil(Math.random() * length);
}

// Draw Ball
function renderBalls(){
    Array.prototype.forEach.call(balls, function(b){
       if(!b.hasOwnProperty('type')){
           ctx.fillStyle = 'rgba('+ball_color.r+','+ball_color.g+','+ball_color.b+','+b.alpha+')';
           ctx.beginPath();
           ctx.arc(b.x, b.y, R, 0, Math.PI*20, true);
           ctx.closePath();
           ctx.fill();
       }
    });
}

// Update balls
function updateBalls(){
    var new_balls = [];
    Array.prototype.forEach.call(balls, function(b){
        b.x += b.vx;
        b.y += b.vy;

        if(b.x > -(50) && b.x < (can_w+50) && b.y > -(50) && b.y < (can_h+50)){
           new_balls.push(b);
        }

        // alpha change
        b.phase += alpha_f;
        b.alpha = Math.abs(Math.cos(b.phase));
        // console.log(b.alpha);
    });

    balls = new_balls.slice(0);
}

// loop alpha
function loopAlphaInf(){

}

// Draw lines
function renderLines(){
    var fraction, alpha;
    for (var i = 0; i < balls.length; i++) {
        for (var j = i + 1; j < balls.length; j++) {

           fraction = getDisOf(balls[i], balls[j]) / dis_limit;

           if(fraction < 1){
               alpha = (1 - fraction).toString();

               ctx.strokeStyle = 'rgba(150,150,150,'+alpha+')';
               ctx.lineWidth = link_line_width;

               ctx.beginPath();
               ctx.moveTo(balls[i].x, balls[i].y);
               ctx.lineTo(balls[j].x, balls[j].y);
               ctx.stroke();
               ctx.closePath();
           }
        }
    }
}

// calculate distance between two points
function getDisOf(b1, b2){
    var  delta_x = Math.abs(b1.x - b2.x),
       delta_y = Math.abs(b1.y - b2.y);

    return Math.sqrt(delta_x*delta_x + delta_y*delta_y);
}

// add balls if there a little balls
function addBallIfy(){
    if(balls.length < 30){
        balls.push(getRandomBall());
    }
}

// Render
function render(){
    ctx.clearRect(0, 0, can_w, can_h);

    renderBalls();

    renderLines();

    updateBalls();

    addBallIfy();

    window.requestAnimationFrame(render);
}

// Init Balls
function initBalls(num){
    for(var i = 1; i <= num; i++){
        balls.push({
            x: randomSidePos(can_w),
            y: randomSidePos(can_h),
            vx: getRandomSpeed('top')[0],
            vy: getRandomSpeed('top')[1],
            r: R,
            alpha: 1,
            phase: randomNumFrom(0, 10)
        });
    }
}
// Init Canvas
function initCanvas(){
    canvas.setAttribute('width', window.innerWidth);
    canvas.setAttribute('height', window.innerHeight);

    can_w = parseInt(canvas.getAttribute('width'));
    can_h = parseInt(canvas.getAttribute('height'));
}
window.addEventListener('resize', function(e){
    console.log('Window Resize...');
    initCanvas();
});

function goMovie(){
    initCanvas();
    initBalls(30);
    window.requestAnimationFrame(render);
}
goMovie();

// Mouse effect
canvas.addEventListener('mouseenter', function(){
    console.log('mouseenter');
    mouse_in = true;
    balls.push(mouse_ball);
});
canvas.addEventListener('mouseleave', function(){
    console.log('mouseleave');
    mouse_in = false;
    var new_balls = [];
    Array.prototype.forEach.call(balls, function(b){
        if(!b.hasOwnProperty('type')){
            new_balls.push(b);
        }
    });
    balls = new_balls.slice(0);
});
canvas.addEventListener('mousemove', function(e){
    var e = e || window.event;
    mouse_ball.x = e.pageX;
    mouse_ball.y = e.pageY;
    // console.log(mouse_ball);
});

</script>
